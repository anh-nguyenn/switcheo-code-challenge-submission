syntax = "proto3";

package rental.rental;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "rental/rental/params.proto";
import "rental/rental/rental.proto";

option go_package = "rental/x/rental/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/rental/rental/params";
  
  }
  
  // Queries a list of Rental items.
  rpc Rental    (QueryGetRentalRequest) returns (QueryGetRentalResponse) {
    option (google.api.http).get = "/rental/rental/rental/{id}";
  
  }
  rpc RentalAll (QueryAllRentalRequest) returns (QueryAllRentalResponse) {
    option (google.api.http).get = "/rental/rental/rental";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetRentalRequest {
  uint64 id = 1;
}

message QueryGetRentalResponse {
  Rental Rental = 1 [(gogoproto.nullable) = false];
}

message QueryAllRentalRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRentalResponse {
  repeated Rental                                 Rental     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

